1. в консоль будет выведено число 10, т.к. ф-ция z задается вне замыкния ф-ции y, т.е. она, не видя переменной х в своём замыкании, идет на уровень выше, где х=10. Если бы мы задавали ф-цию z в замыкании ф-ции у, то было бы выведено значение "20";

2. в консоль будет выведено число 30, т.к. в ф-ции у() переменная а создается  без var, => попадают в глобальную область видимости, в ф-ции х() создается переменная b именно для своего замыкания т.е. она не будет видна во внешнем замыкании. А в функции z() вызываются непосредственно переменные a=10 и b=20, принадлежащие её области видимости. 

3. в консоль будет выведено 10 20, т.к. переменные a,b передается функции как аргументы.

4. в консоль будет выведено число 40, т.к. после var func=Generate(i), переменная i=50 создается в глобальной области видимости, ф var i=40 в том же замыкании, что и сама функция.

5. Object. Вложенная ф-ция возвращает объект с полем и соотв.значение field: NaN, т.к. её передается только один агрумент a*b. Если бы его не было, то возвратилось бы значение типа function, если бы аргументов было два, то field имело бы конкретное значение.

6. Будет выведено число 600. Самая внешняя функция принимает в кач-ве значения аргумента число х=40, т.е. везде при вызове переменной a будет передаваться значение 40(a=x=40); в ней же создаются локальные для её замыкания переменные x=15, b=60. В функции на уровень ниже передается аргумент а, но он у нас уже равен 40, получаем, что теперь везде при вызове b будет передаваться то же значение 40(a=x=b=40); здесь число x берется из замыкания на уровень выше, т.к. это та самая локальная переменная x=15. В итоге будет выведено число 600=b*x=40*15. 

7. будет выведено "Alex", т.к. мы передаем в функцию в качестве аргумент "Alex", да и сама ф-ция возвращает объект, а this в методе sayName указывает на него.

8. будет выведено "Maria", т.к. alex.sayName.call(maria) возвращает результат выполнения метода sayName на контексте maria, пусть и вызван он через объект alex.

9. будет выведено "Alex". Последние три строки аналогичны maria.sayName.call(alex), кот. явл. результатом выполнения метода sayName на контексте alex

10. -